---
title: "World Data Visualization Prize"
format: html
editor: visual
---

[The World Data Visualization Prize](https://wdvp.worldgovernmentsummit.org/)

# Libraries

```{r}
#| label: setup
#| message: false
library(googlesheets4)
library(tidyverse)
library(skimr)
```

Authorize Google Sheets API

```{r}
googlesheets4::gs4_auth()
```

# Data

[Original Dataset](https://geni.us/WDVPdata/)

### Resources

[Getting your data into R from Google Sheets](https://arbor-analytics.com/post/getting-your-data-into-r-from-google-sheets/)

```{r}
data_url = "https://docs.google.com/spreadsheets/d/1GtlfVKz5VQiXTtNXyhr_xyt1sr5Bngi_ITWOSuFisWc/edit#gid=1693068612"

# Get sheet names
(data_sheets = sheet_names(data_url))

```

```{r}

# Read the What Just Happened data
past_df = read_sheet(data_url, sheet = data_sheets[2])

past_cols = c("indicator", "indicator_desc", "metric", 
              "2009", str_c("201", 0:9), "2020", "2021", 
              "empty", "change_10_years", "source_name", "source_url")
```

```{r}
glimpse(past_df, width = 80)
```

```{r}
# Read in the different data in separate data frames
data_ranges = list(
  "health" = "A3:T25",
  "energy" = "A29:T45",
  "qol" = "A48:T60",
  "ed_dev" = "A63:T75",
  "sust" = "A80:T88",
  "econ" = "A92:T96"
)

past_dfs = map(data_ranges, 
               \(data) read_sheet(ss = data_url, range = data, 
                                  sheet = data_sheets[2], col_names = past_cols, 
                                  col_types = "cccnnnnnnnnnnnnn-ncc", 
                                  na = c("", "-"), trim_ws = T)
               )

# glimpse(past_dfs)
```

I will likely want to pivot the data to track changes over time.

```{r}
pivot_years = function(df){
  pivot_longer(df, cols = matches("20[0-2][0-9]"), names_to = "year", values_to = "pct", names_transform = list(year = as.integer))
}

map(past_dfs, pivot_years)
```


## Health

```{r}
distinct(past_dfs$health, indicator, indicator_desc, metric)
```


```{r}
glimpse(past_dfs$health)
```

```{r}
skim(past_dfs$health)
```

## Energy

```{r}
distinct(past_dfs$energy, indicator, indicator_desc, metric)
```




```{r}
skim(past_dfs$energy)
```

```{r}
elec_prod = past_dfs$energy %>% 
  filter(metric == "%", str_detect(indicator_desc, "global electricity")) %>% 
  pivot_longer(cols = `2009`:`2021`, names_to = "year", values_to = "pct", names_transform = list(year = as.integer))
```

Plot electricity production on area chart

```{r}
elec_prod %>% 
  filter(str_detect(indicator, "Solar|Wind", negate = T)) %>% 
  ggplot(., aes(y = pct, x = year))+
  geom_area(aes(fill = indicator))+
  theme_minimal()
```

## Quality of Life

```{r}
distinct(past_dfs$qol, indicator, indicator_desc, metric)
```

Access to basic needs

```{r}
past_dfs$qol %>% 
  filter(indicator_desc == "% of global population") %>% 
  pivot_years() %>% 
  ggplot(., aes(x = year, y = pct))+
  geom_smooth(aes(colour = indicator), se = F)+
  scale_y_continuous(limits = c(0, 100))+
  theme_minimal()

```



## Education & Development

```{r}
distinct(past_dfs$ed_dev, indicator, indicator_desc, metric)
```


## Sustainability & Climate

```{r}
distinct(past_dfs$sust, indicator, indicator_desc, metric)
```


## Economics

```{r}
distinct(past_dfs$econ, indicator, indicator_desc, metric)
```


